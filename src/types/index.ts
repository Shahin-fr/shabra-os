/**
 * Main type system exports for Shabra OS
 * Provides a centralized export point for all type definitions
 */

// Base types
export * from './base';
export * from './conventions';
export * from './transformers';

// Validation schemas (avoid conflicts by selective export)
export {
  BaseEntitySchema,
  BaseDTOSchema,
  BaseCreateDTOSchema,
  BaseUpdateDTOSchema,
  EmailSchema,
  NameSchema,
  PasswordSchema,
  PhoneSchema,
  URLSchema,
  UuidSchema,
  CuidSchema,
  validateEntity,
  validateDTO,
  validateCreateDTO,
  validateUpdateDTO,
  safeValidateEntity,
  safeValidateDTO,
  safeValidateCreateDTO,
  safeValidateUpdateDTO,
  formatValidationErrors,
  formatValidationError,
  validateEmail,
  validatePhone,
  validateURL,
  validateSlug,
  validatePassword,
  validateName,
  createConditionalSchema,
  validateArray,
  validateNonEmptyArray,
  validatePartialObject,
  createCustomSchema,
  createTransformSchema,
  createRefinedSchema,
  createMultiRefinedSchema,
} from './validation';

// API types (avoid conflicts by selective export)
export {
  HTTP_STATUS,
  ApiResponseBuilder,
  isSuccessResponse,
  isErrorResponse,
  isSingleEntityResponse,
  isEntityListResponse,
  isEntityCreatedResponse,
  isEntityUpdatedResponse,
  isEntityDeletedResponse,
  isEntityNotFoundResponse,
  isValidationErrorResponse,
  isUnauthorizedResponse,
  isForbiddenResponse,
  isConflictResponse,
  isRateLimitResponse,
  isInternalServerErrorResponse,
  validateApiResponse,
  transformApiResponse,
  handleApiResponse,
  handleApiResponseAsync,
} from './api';

// Entity types - comprehensive exports based on Prisma schema
export * from './entities';
export * from './schemas';

// Re-export commonly used types for convenience
export type {
  BaseEntity,
  BaseDTO,
  BaseCreateDTO,
  BaseUpdateDTO,
  SoftDeleteEntity,
  EntityId,
  Timestamp,
  ISOTimestamp,
  Status,
  Priority,
  Email,
  PhoneNumber,
  URL,
  Slug,
} from './base';

export type {
  EntityToDTO,
  EntityToCreateDTO,
  EntityToUpdateDTO,
  DTOToEntity,
  DeepPartial,
  DeepRequired,
  NonNullable,
  NonEmptyArray,
  RequireFields,
  OptionalFields,
  PickFields,
  OmitFields,
  ArrayElement,
  ReturnType,
  Parameters,
} from './conventions';

export type {
  SingleEntityResponse,
  EntityListResponse,
  EntityCreatedResponse,
  EntityUpdatedResponse,
  EntityDeletedResponse,
  EntityNotFoundResponse,
  ValidationErrorResponse,
  UnauthorizedResponse,
  ForbiddenResponse,
  ConflictResponse,
  RateLimitResponse,
  InternalServerErrorResponse,
  ApiResponseType,
  CreateEntityRequest,
  UpdateEntityRequest,
  QueryParams,
} from './api';

export type {
  // Core entities
  UserEntity,
  UserDTO,
  CreateUserDTO,
  UpdateUserDTO,
  ProfileEntity,
  ProfileDTO,
  CreateProfileDTO,
  UpdateProfileDTO,
  ProjectEntity,
  ProjectDTO,
  CreateProjectDTO,
  UpdateProjectDTO,
  TaskEntity,
  TaskDTO,
  CreateTaskDTO,
  UpdateTaskDTO,
  DocumentEntity,
  DocumentDTO,
  CreateDocumentDTO,
  UpdateDocumentDTO,
  StoryEntity,
  StoryDTO,
  CreateStoryDTO,
  UpdateStoryDTO,
  StoryTypeEntity,
  StoryTypeDTO,
  CreateStoryTypeDTO,
  UpdateStoryTypeDTO,
  StoryIdeaEntity,
  StoryIdeaDTO,
  CreateStoryIdeaDTO,
  UpdateStoryIdeaDTO,
  MeetingEntity,
  MeetingDTO,
  CreateMeetingDTO,
  UpdateMeetingDTO,
  MeetingAttendeeEntity,
  MeetingAttendeeDTO,
  CreateMeetingAttendeeDTO,
  UpdateMeetingAttendeeDTO,
  TalkingPointEntity,
  TalkingPointDTO,
  CreateTalkingPointDTO,
  UpdateTalkingPointDTO,
  ActionItemEntity,
  ActionItemDTO,
  CreateActionItemDTO,
  UpdateActionItemDTO,
  LeaveRequestEntity,
  LeaveRequestDTO,
  CreateLeaveRequestDTO,
  UpdateLeaveRequestDTO,
  RequestEntity,
  RequestDTO,
  CreateRequestDTO,
  UpdateRequestDTO,
  EmployeeDocumentEntity,
  EmployeeDocumentDTO,
  CreateEmployeeDocumentDTO,
  UpdateEmployeeDocumentDTO,
  ChecklistTemplateEntity,
  ChecklistTemplateDTO,
  CreateChecklistTemplateDTO,
  UpdateChecklistTemplateDTO,
  ChecklistTemplateTaskEntity,
  ChecklistTemplateTaskDTO,
  CreateChecklistTemplateTaskDTO,
  UpdateChecklistTemplateTaskDTO,
  EmployeeChecklistEntity,
  EmployeeChecklistDTO,
  CreateEmployeeChecklistDTO,
  UpdateEmployeeChecklistDTO,
  AttendanceEntity,
  AttendanceDTO,
  CreateAttendanceDTO,
  UpdateAttendanceDTO,
  ContentSlotEntity,
  ContentSlotDTO,
  CreateContentSlotDTO,
  UpdateContentSlotDTO,
  WorkScheduleEntity,
  WorkScheduleDTO,
  CreateWorkScheduleDTO,
  UpdateWorkScheduleDTO,
  HolidayEntity,
  HolidayDTO,
  CreateHolidayDTO,
  UpdateHolidayDTO,
  AuditLogEntity,
  AuditLogDTO,
  CreateAuditLogDTO,
  UpdateAuditLogDTO,
  TrackedInstagramPageEntity,
  TrackedInstagramPageDTO,
  CreateTrackedInstagramPageDTO,
  UpdateTrackedInstagramPageDTO,
  InstagramReelEntity,
  InstagramReelDTO,
  CreateInstagramReelDTO,
  UpdateInstagramReelDTO,
  // Union types
  Entity,
  DTO,
  CreateDTO,
  UpdateDTO,
  EntityName,
  EntityTypeMap,
  DTOTypeMap,
  CreateDTOTypeMap,
  UpdateDTOTypeMap,
} from './entities';

// Re-export transformation utilities
export {
  entityToDTO,
  entitiesToDTOs,
  dtoToEntity,
  dtosToEntities,
  entityToCreateDTO,
  entityToUpdateDTO,
  mergeUpdateDTO,
  createPartialDTO,
  deepEntityToDTO,
  deepDtoToEntity,
  createSummaryDTO,
  createPublicDTO,
  validateCreateDTO as validateCreateDTOData,
  validateUpdateDTO as validateUpdateDTOData,
  createComputedDTO,
  transformDTO,
  createChangedDTO,
  safeTransform,
} from './transformers';

// Re-export type guards
export {
  isBaseEntity,
  isBaseDTO,
  isApiResponse,
  isErrorResponse as isErrorResponseType,
  isSuccessResponse as isSuccessResponseType,
} from './base';

// Re-export type checking utilities
export {
  isString,
  isNumber,
  isBoolean,
  isObject,
  isArray,
  isFunction,
  isDate,
  isNull,
  isUndefined,
  isNullish,
  assertIsString,
  assertIsNumber,
  assertIsBoolean,
  assertIsObject,
  assertIsArray,
  assertIsDate,
  toDate,
  toISOString,
  validateRequired,
  validateString,
  validateNumber,
  validateEmail as validateEmailField,
  validateEnum,
} from './conventions';

// Re-export schemas
export {
  EntitySchemas,
  DTOSchemas,
  CreateDTOSchemas,
  UpdateDTOSchemas,
} from './schemas';
